/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as Game_indexRouteImport } from './routes/game/__index'
import { Route as PlayerIndexRouteImport } from './routes/player/index'
import { Route as GameIndexRouteImport } from './routes/game/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as PlayerGameRouteImport } from './routes/player/game'
import { Route as GameRecoveryRouteImport } from './routes/game/recovery'
import { Route as GameQrcodeRouteImport } from './routes/game/qrcode'
import { Route as GameAdminRouteImport } from './routes/game/admin'

const GameRouteImport = createFileRoute('/game')()

const GameRoute = GameRouteImport.update({
  id: '/game',
  path: '/game',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const Game_indexRoute = Game_indexRouteImport.update({
  id: '/__index',
  getParentRoute: () => GameRoute,
} as any)
const PlayerIndexRoute = PlayerIndexRouteImport.update({
  id: '/player/',
  path: '/player/',
  getParentRoute: () => rootRouteImport,
} as any)
const GameIndexRoute = GameIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GameRoute,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const PlayerGameRoute = PlayerGameRouteImport.update({
  id: '/player/game',
  path: '/player/game',
  getParentRoute: () => rootRouteImport,
} as any)
const GameRecoveryRoute = GameRecoveryRouteImport.update({
  id: '/recovery',
  path: '/recovery',
  getParentRoute: () => GameRoute,
} as any)
const GameQrcodeRoute = GameQrcodeRouteImport.update({
  id: '/qrcode',
  path: '/qrcode',
  getParentRoute: () => GameRoute,
} as any)
const GameAdminRoute = GameAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => GameRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/game': typeof Game_indexRoute
  '/game/admin': typeof GameAdminRoute
  '/game/qrcode': typeof GameQrcodeRoute
  '/game/recovery': typeof GameRecoveryRoute
  '/player/game': typeof PlayerGameRoute
  '/dashboard': typeof DashboardIndexRoute
  '/game/': typeof GameIndexRoute
  '/player': typeof PlayerIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/game': typeof GameIndexRoute
  '/game/admin': typeof GameAdminRoute
  '/game/qrcode': typeof GameQrcodeRoute
  '/game/recovery': typeof GameRecoveryRoute
  '/player/game': typeof PlayerGameRoute
  '/dashboard': typeof DashboardIndexRoute
  '/player': typeof PlayerIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/game': typeof GameRouteWithChildren
  '/game/__index': typeof Game_indexRoute
  '/game/admin': typeof GameAdminRoute
  '/game/qrcode': typeof GameQrcodeRoute
  '/game/recovery': typeof GameRecoveryRoute
  '/player/game': typeof PlayerGameRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/game/': typeof GameIndexRoute
  '/player/': typeof PlayerIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/game'
    | '/game/admin'
    | '/game/qrcode'
    | '/game/recovery'
    | '/player/game'
    | '/dashboard'
    | '/game/'
    | '/player'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/game'
    | '/game/admin'
    | '/game/qrcode'
    | '/game/recovery'
    | '/player/game'
    | '/dashboard'
    | '/player'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/game'
    | '/game/__index'
    | '/game/admin'
    | '/game/qrcode'
    | '/game/recovery'
    | '/player/game'
    | '/dashboard/'
    | '/game/'
    | '/player/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  GameRoute: typeof GameRouteWithChildren
  PlayerGameRoute: typeof PlayerGameRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  PlayerIndexRoute: typeof PlayerIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/game': {
      id: '/game'
      path: '/game'
      fullPath: '/game'
      preLoaderRoute: typeof GameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game/__index': {
      id: '/game/__index'
      path: '/game'
      fullPath: '/game'
      preLoaderRoute: typeof Game_indexRouteImport
      parentRoute: typeof GameRoute
    }
    '/player/': {
      id: '/player/'
      path: '/player'
      fullPath: '/player'
      preLoaderRoute: typeof PlayerIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game/': {
      id: '/game/'
      path: '/'
      fullPath: '/game/'
      preLoaderRoute: typeof GameIndexRouteImport
      parentRoute: typeof GameRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/player/game': {
      id: '/player/game'
      path: '/player/game'
      fullPath: '/player/game'
      preLoaderRoute: typeof PlayerGameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game/recovery': {
      id: '/game/recovery'
      path: '/recovery'
      fullPath: '/game/recovery'
      preLoaderRoute: typeof GameRecoveryRouteImport
      parentRoute: typeof GameRoute
    }
    '/game/qrcode': {
      id: '/game/qrcode'
      path: '/qrcode'
      fullPath: '/game/qrcode'
      preLoaderRoute: typeof GameQrcodeRouteImport
      parentRoute: typeof GameRoute
    }
    '/game/admin': {
      id: '/game/admin'
      path: '/admin'
      fullPath: '/game/admin'
      preLoaderRoute: typeof GameAdminRouteImport
      parentRoute: typeof GameRoute
    }
  }
}

interface GameRouteChildren {
  Game_indexRoute: typeof Game_indexRoute
  GameAdminRoute: typeof GameAdminRoute
  GameQrcodeRoute: typeof GameQrcodeRoute
  GameRecoveryRoute: typeof GameRecoveryRoute
  GameIndexRoute: typeof GameIndexRoute
}

const GameRouteChildren: GameRouteChildren = {
  Game_indexRoute: Game_indexRoute,
  GameAdminRoute: GameAdminRoute,
  GameQrcodeRoute: GameQrcodeRoute,
  GameRecoveryRoute: GameRecoveryRoute,
  GameIndexRoute: GameIndexRoute,
}

const GameRouteWithChildren = GameRoute._addFileChildren(GameRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  GameRoute: GameRouteWithChildren,
  PlayerGameRoute: PlayerGameRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  PlayerIndexRoute: PlayerIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
